// กำหนด API Key (แทนที่ YOUR_OPENAI_API_KEY ด้วย API Key จริงของคุณ)
const apiKey = 'sk-b-MhwqwdxhCOoWll7eDmm7l0S8IM0T_MbUMUZ1LbMfT3BlbkFJcyuiAFO0ur3gIBCY8YMlzuM3XLU8xtNZmpGnX8WlAA';
const messagesContainer = document.getElementById('messages');
const userInput = document.getElementById('user-input');
const sendButton = document.getElementById('send-button');

// ประวัติการสนทนาเพื่อให้แชทบอทจดจำ
let conversationHistory = [];

sendButton.addEventListener('click', sendMessage);

// ฟังก์ชันส่งข้อความ
async function sendMessage() {
    const message = userInput.value.trim();
    if (message === '') return;

    appendMessage('คุณ', message, true);
    conversationHistory.push({ role: 'user', content: message });
    userInput.value = '';

    const response = await getChatGPTResponse(conversationHistory);
    appendMessage('ที่ปรึกษา', response, false);
    conversationHistory.push({ role: 'assistant', content: response });
}

// ฟังก์ชันแสดงข้อความ
function appendMessage(sender, message, isUser) {
    const messageElement = document.createElement('div');
    messageElement.className = 'message' + (isUser ? ' user-message' : ' bot-message');
    messageElement.innerText = `${sender}: ${message}`;
    messagesContainer.appendChild(messageElement);
    messagesContainer.scrollTop = messagesContainer.scrollHeight;
}

// ฟังก์ชันเรียก API ของ ChatGPT
async function getChatGPTResponse(conversationHistory) {
    const apiUrl = 'https://api.openai.com/v1/chat/completions';
    const requestBody = {
        model: 'gpt-4',
        messages: [
            { role: 'system', content: "You are a highly skilled global startup advisor with extensive experience in advising startups on initiation, problem management, and legal issues. Provide expert advice in a clear, simple, and easy-to-understand manner." },
            ...conversationHistory
        ],
        max_tokens: 150,
        temperature: 0.7 // เพิ่มความคิดสร้างสรรค์เล็กน้อย
    };

    try {
        const response = await fetch(apiUrl, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${apiKey}`
            },
            body: JSON.stringify(requestBody)
        });

        const data = await response.json();
        return formatResponse(data.choices[0].message.content.trim());
    } catch (error) {
        console.error('Error fetching ChatGPT response:', error);
        return 'ขออภัย, ไม่สามารถตอบกลับได้ในขณะนี้';
    }
}

// ฟังก์ชันจัดรูปแบบคำตอบให้สั้น กระชับ และเว้นบรรทัด
function formatResponse(response) {
    // ตัดข้อความให้สั้นลง และเว้นบรรทัดให้สบายตา
    let formattedResponse = response.split('. ').map(sentence => sentence.trim()).join('.\n\n');
    return formattedResponse.length > 250 ? formattedResponse.substring(0, 250) + '...' : formattedResponse;
}
